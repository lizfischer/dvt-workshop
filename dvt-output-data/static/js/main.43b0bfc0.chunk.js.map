{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["padZeros","number","pad","repeat","toString","substr","img_type_titles","img_type_values","MetaViewer","props","item","className","metaFlag","values","map","val","i","key","titles","Description","href","target","rel","Slider","onChange","type","defaultValue","id","max","length","numthumbs","Button","onClick","disabled","symbol","Viewer","handleVideoChange","selectedOption","setState","video","value","video_name","label","resetVideo","handleTypeChange","img_type","img_type_name","state","toc","data","num_thumbs","start_index","meta_index","meta_flag","overlay_index","overlay_type","fetch","then","res","json","video_name_long","index","oname","input_seconds","total_seconds","Math","floor","total_minutes","seconds","minutes","formatTime","this","cut","meta","fps","inum","mpoint","min","increment","document","getElementById","slider","Number","video_options","push","type_options","customStyles","control","base","minHeight","dropdownIndicator","paddingTop","paddingBottom","clearIndicator","next_inactive","prev_inactive","options","styles","handleSliderSelection","handleIncrementStart","formatedTimes","num_faces","num_people","shot_length","objects","Array","keys","handleOverlay","src","imgPath","onMouseOver","handleMetadataId","onMouseOut","handleMetadataFlag","tabIndex","alt","draggable","width","height","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43b0bfc0.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\n\nimport './App.css';\n\n// ***************************************************************************\n// Helper functions\n\nfunction padZeros(number, pad) {\n    return (\"0\".repeat(pad) + number).toString().substr(-pad, pad);\n}\n\nfunction formatTime(input_seconds) {\n\n    var total_seconds = Math.floor(input_seconds);\n    var total_minutes = Math.floor(total_seconds / 60);\n    var seconds = total_seconds % 60;\n    var hours = Math.floor(total_minutes / 60);\n    var minutes = total_minutes % 60;\n\n    var time_start = padZeros(hours, 2) + \":\" + padZeros(minutes, 2) + \":\" +\n        padZeros(seconds, 2);\n\n    return time_start;\n}\n\n// ***************************************************************************\n// Global variables\n\nconst img_type_titles = [\n  'Objects and Faces',\n  'Optical Flow',\n  'Spectrogram',\n  'Audio Tone'\n];\nconst img_type_values = ['display', 'flow', 'spec', 'tone'];\n\n// ***************************************************************************\n// Functions that return JSX Objects\n\nfunction MetaViewer(props) {\n\n  const item = (\n      <ul className={props.metaFlag ? \"ul-show\" : \"ul-hide\"}>\n        {props.values.map(function(val, i){\n          return <li key={i}>{props.titles[i]}: <span>{val}</span></li>;\n        })}\n      </ul>\n    )\n\n  return(\n  <div className=\"grid-item-meta\">\n    <h3>Detected Metadata</h3>\n      {item}\n  </div>\n  )\n}\n\nfunction Description(props) {\n\n  return(\n  <div className=\"grid-item-desc\">\n    <h2>Distant Viewing Visualization</h2>\n    <p>\n      Welcome to the visualization platform, as part of the <a\n      href=\"https://github.com/distant-viewing/dvt\" target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      Distant Viewing Toolkit</a>. Select a video file, choose desired\n      annotations, and scroll through each video file using the controls on the\n      right-hand side. Hover over an image to see extracted metadata and click\n      to open a larger view.\n    </p>\n  </div>\n  )\n}\n\nfunction Slider(props) {\n  return (\n    <input\n      className=\"controls-slider\"\n      onChange={props.onChange}\n      type=\"range\"\n      defaultValue=\"0\"\n      id=\"sliderInput\"\n      max={props.length - props.numthumbs}/>\n  )\n}\n\nfunction Button(props) {\n  return (\n    <button type=\"button\" onClick={props.onClick} disabled={props.disabled}>\n      {props.symbol}\n    </button>\n  )\n}\n\n// ***************************************************************************\n// Main class that holds the state of the App\n\nclass Viewer extends React.Component {\n\n  // Override two standard methods of React.Component //\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      toc: null,\n      data: null,\n      video: null,\n      video_name: null,\n      num_thumbs: 2,\n      img_type: \"display\",\n      img_type_name: \"Objects and Faces\",\n      start_index: 0,\n      meta_index: 0,\n      meta_flag: false,\n      overlay_index: -1,\n      overlay_type: \"frames\",\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"./data/toc.json\").then(res => {\n      return res.json()\n    }).then(res => {\n      this.setState({\n        toc: res,\n        video: res[0].video_name,\n        video_name: res[0].video_name_long,\n      }, () => {\n        this.resetVideo();\n      });\n    });\n\n  }\n\n  // Helper functions to format state variables //\n\n  formatedTimes(index, oname) {\n    return(formatTime(\n      this.state.data.cut[index][oname] / this.state.data.meta[0].fps\n    ))\n  }\n\n  imgPath(index, img_type) {\n    if (index < 0) {\n      return null;\n    }\n\n    var inum = this.state.data.cut[index].mpoint;\n    if ((img_type === \"spec\") | (img_type === \"tone\")) {\n      inum = index;\n    }\n\n    return (\n      \"img/\" + this.state.video + \"/\" + img_type +\n      \"/frame-\" + padZeros(inum, 6) + \".png\"\n    );\n  }\n\n  // handle callbacks that change state //\n\n  resetVideo() {\n    fetch(\"./data/\" + this.state.video + \".json\").then(res => {\n      return res.json()\n    }).then(res => {\n      this.setState({\n        data: res,\n        start_index: 0,\n        meta_index: 0,\n        meta_flag: false,\n        num_thumbs: Math.min(5, res.cut.length),\n        overlay_index: -1,\n      }, () => {\n        // should clear things and set height of viewer when changing the video\n      });\n    });\n  }\n\n  handleVideoChange = selectedOption => {\n    this.setState({\n      video: selectedOption.value,\n      video_name: selectedOption.label\n    }, () => {\n      this.resetVideo();\n    });\n  }\n\n  handleTypeChange = selectedOption => {\n    this.setState({\n      img_type: selectedOption.value,\n      img_type_name: selectedOption.label,\n    });\n  }\n\n  handleIncrementStart(increment) {\n    var start_index = this.state.start_index + increment;\n\n    if (start_index < 0) {\n      start_index = 0;\n    }\n\n    if (start_index >= this.state.data.cut.length - this.state.num_thumbs + 1) {\n      start_index = this.state.data.cut.length - this.state.num_thumbs;\n    }\n\n    var slider = document.getElementById(\"sliderInput\");\n    slider.value = start_index;\n\n    this.setState({\n      start_index: start_index,\n    });\n  }\n\n  handleMetadataId(meta_index) {\n    this.setState({\n      meta_index: meta_index,\n      meta_flag: true,\n    });\n  }\n\n  handleMetadataFlag(meta_flag) {\n    this.setState({\n      meta_flag: meta_flag,\n    });\n  }\n\n  handleOverlay(overlay_index, overlay_type) {\n    if (overlay_type === null) {\n      overlay_type = this.state.overlay_type;\n    }\n\n    this.setState({\n      overlay_index: overlay_index,\n      overlay_type: overlay_type\n    });\n  }\n\n  handleSliderSelection() {\n    var slider = document.getElementById(\"sliderInput\");\n\n    this.setState({\n      start_index: Number(slider.value),\n    });\n  }\n\n  // render the page\n\n  render() {\n    if (!this.state.data) {\n      return <span>Waiting...</span>\n    }\n\n    var video_options = [];\n    var i = 0;\n    for (i = 0; i < this.state.toc.length; i++) {\n      video_options.push({\n        'value': this.state.toc[i].video_name,\n        'label': this.state.toc[i].video_name_long\n      });\n    }\n\n    var type_options = [];\n    for (i = 0; i < img_type_values.length; i++) {\n      if ((i < 2) | \"power\" in this.state.data) {\n        type_options.push({\n          'value': img_type_values[i],\n          'label': img_type_titles[i]\n        });\n      }\n    }\n\n    const customStyles = {\n      control: (base) => ({\n        ...base,\n        minHeight: 20,\n      }),\n      dropdownIndicator: (base) => ({\n        ...base,\n        paddingTop: 0,\n        paddingBottom: 0,\n      }),\n      clearIndicator: (base) => ({\n        ...base,\n        paddingTop: 0,\n        paddingBottom: 0,\n      }),\n    };\n\n    const next_inactive = (\n      (this.state.overlay_index === (this.state.data.cut.length - 1) ?\n       \" inactive\" : \"\")\n    );\n\n    const prev_inactive = (\n      (this.state.overlay_index === 0 ? \" inactive\" : \"\")\n    );\n\n    return (\n      <div className=\"grid-container\">\n\n        <div className=\"grid-item-controls\">\n\n          <Select\n            value={{'value': this.state.video, 'label': this.state.video_name}}\n            options={video_options}\n            onChange={this.handleVideoChange}\n            className=\"video-select\"\n            styles={customStyles}\n          />\n\n          <Select\n            value={{\n              'value': this.state.img_type,\n              'label': this.state.img_type_name\n            }}\n            options={type_options}\n            onChange={this.handleTypeChange}\n            className=\"type-select\"\n            styles={customStyles}\n          />\n\n          <Slider\n            length={this.state.data.cut.length}\n            numthumbs={this.state.num_thumbs}\n            onChange={() => this.handleSliderSelection()}\n          />\n\n          <Button\n            symbol=\"&#x2190;\"\n            onClick={() => this.handleIncrementStart(-1)}\n            disabled={this.state.start_index <= 0}\n          />\n\n          <Button\n            symbol=\"&#x2192;\"\n            onClick={() => this.handleIncrementStart(1)}\n            disabled={\n              this.state.start_index >= this.state.data.cut.length - this.state.num_thumbs\n            }\n          />\n\n        </div>\n\n        <MetaViewer\n          values={[\n            this.state.meta_index,\n            this.formatedTimes(this.state.meta_index, \"frame_start\"),\n            this.formatedTimes(this.state.meta_index, \"frame_end\"),\n            this.state.data.length[this.state.meta_index].num_faces,\n            this.state.data.length[this.state.meta_index].num_people,\n            this.state.data.length[this.state.meta_index].shot_length,\n            this.state.data.length[this.state.meta_index].objects,\n          ]}\n          titles={[\n            \"Shot Number\",\n            \"Start Time\",\n            \"End Time\",\n            \"Number of Detected Faces\",\n            \"Number of Detected People\",\n            \"Estimated Shot Length\",\n            \"Detected Objects\"\n          ]}\n          metaFlag={this.state.meta_flag}\n        />\n\n        <Description\n\n        />\n\n        <div className=\"grid-frames-cols\">\n          <div>\n          </div>\n\n          {[...Array(this.state.num_thumbs).keys()].map(\n            i => {\n              return(\n                <div className=\"grid-frame-item-col\" key={i}>\n                  {this.formatedTimes(this.state.start_index + i, \"mpoint\")}\n                </div>\n              )\n            }\n          )}\n        </div>\n\n        <div className=\"grid-item-frames-orig\">\n          <div className=\"grid-frame-item-row\">\n            <span className=\"grid-frame-item-row-rot\">Original</span>\n          </div>\n\n          {[...Array(this.state.num_thumbs).keys()].map(\n            i => {\n              return(\n                <div\n                  className=\"grid-frame-item\"\n                  key={i}\n                  onClick={() => this.handleOverlay(\n                    this.state.start_index + i, \"frames\"\n                  )}\n                  >\n                  <img\n                    src={this.imgPath(this.state.start_index + i, \"thumb\")}\n                    onMouseOver={() => this.handleMetadataId(\n                      this.state.start_index + i\n                    )}\n                    onMouseOut={() => this.handleMetadataFlag(false)}\n                    tabIndex=\"-1\"\n                    alt=\"\"\n                    draggable=\"false\"\n                    className=\"img-thumb\"/>\n\n                    <img\n                      className=\"svg-open\"\n                      src=\"static/eye.svg\"\n                      width=\"20\"\n                      height=\"20\"\n                      alt=\"\"/>\n                </div>\n              )\n            }\n          )}\n        </div>\n\n        <div className=\"grid-item-frames-anno\">\n          <div className=\"grid-frame-item-row\">\n            <span className=\"grid-frame-item-row-rot\">\n              {this.state.img_type_name}\n            </span>\n          </div>\n\n          {[...Array(this.state.num_thumbs).keys()].map(\n            i => {\n              return(\n                <div\n                  className=\"grid-frame-item\"\n                  key={i}\n                  onClick={() => this.handleOverlay(\n                  this.state.start_index + i,\n                  this.state.img_type)}>\n                    <img\n                      src={this.imgPath(\n                        this.state.start_index + i,\n                        this.state.img_type\n                      )}\n                      onMouseOver={() => this.handleMetadataId(\n                        this.state.start_index + i\n                      )}\n                      onMouseOut={() => this.handleMetadataFlag(false)}\n                      tabIndex=\"-1\"\n                      alt=\"\"\n                      draggable=\"false\"\n                      className=\"img-thumb\"/>\n\n                  <img\n                    className=\"svg-open\"\n                    src=\"static/eye.svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    alt=\"\"/>\n                </div>\n              )\n            }\n          )}\n        </div>\n\n        <div className={\n            \"grid-item-overlay\" +\n            (this.state.overlay_index >= 0 ? \" visible\" : \"\")\n          }>\n          <img\n            src={this.imgPath(\n              this.state.overlay_index,\n              this.state.overlay_type\n            )}\n            className=\"overlay-img\"\n            tabIndex=\"-1\"\n            alt=\"\"\n            draggable=\"false\"/>\n\n          <img\n            className=\"svg-icon svg-close\"\n            onClick={() => this.handleOverlay(-1, null)}\n            src=\"static/close.svg\"\n            width=\"45\"\n            height=\"45\"\n            alt=\"\"/>\n\n          <img\n            className={\"svg-icon svg-next \" + next_inactive}\n            onClick={\n              () => this.handleOverlay(this.state.overlay_index + 1, null)\n            }\n            src=\"static/next.svg\"\n            width=\"45\"\n            height=\"45\"\n            alt=\"\"/>\n\n          <img\n            className={\"svg-icon svg-prev \" + prev_inactive}\n            onClick={\n              () => this.handleOverlay(this.state.overlay_index - 1, null)\n            }\n            src=\"static/prev.svg\"\n            width=\"45\"\n            height=\"45\"\n            alt=\"\"/>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\n// ***************************************************************************\n// Wrap the App and return the rendered Viewer\n\nfunction App() {\n  return (\n    <Viewer />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}